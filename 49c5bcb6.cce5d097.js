(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{125:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,b=d["".concat(i,".").concat(f)]||d[f]||m[f]||a;return n?o.a.createElement(b,c(c({ref:t},s),{},{components:n})):o.a.createElement(b,c({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),a=(n(0),n(125)),i={id:"config-spf",title:"Configure SPF"},c={unversionedId:"config-spf",id:"config-spf",isDocsHomePage:!1,title:"Configure SPF",description:"From Wikipedia:",source:"@site/docs/Configure-SPF.md",slug:"/config-spf",permalink:"/docker-mailserver/docs/config-spf",editUrl:"https://github.com/polarathene/docker-mailserver/tree/docs/docusaurus-demo/website/docs/Configure-SPF.md",version:"current",sidebar:"docs",previous:{title:"Configure DMARC",permalink:"/docker-mailserver/docs/config-dmarc"},next:{title:"Autodiscovery",permalink:"/docker-mailserver/docs/config-autodiscover"}},p=[{value:"Add a SPF record",id:"add-a-spf-record",children:[]},{value:"Backup MX, Secondary MX",id:"backup-mx-secondary-mx",children:[]}],s={toc:p};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"From ",Object(a.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Sender_Policy_Framework"},"Wikipedia"),":"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},'Sender Policy Framework (SPF) is a simple email-validation system designed to detect email spoofing by providing a mechanism to allow receiving mail exchangers to check that incoming mail from a domain comes from a host authorized by that domain\'s administrators. The list of authorized sending hosts for a domain is published in the Domain Name System (DNS) records for that domain in the form of a specially formatted TXT record. Email spam and phishing often use forged "from" addresses, so publishing and checking SPF records can be considered anti-spam techniques.')),Object(a.b)("p",null,"For a more technical review: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/internetstandards/toolbox-wiki/blob/master/SPF-how-to.md"},"https://github.com/internetstandards/toolbox-wiki/blob/master/SPF-how-to.md")),Object(a.b)("h2",{id:"add-a-spf-record"},"Add a SPF record"),Object(a.b)("p",null,"To add a SPF record in your DNS, insert the following line in your DNS zone:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},'; MX record must be declared for SPF to work\ndomain.com. IN  MX 1 mail.domain.com.\n\n; SPF record\ndomain.com. IN TXT "v=spf1 mx ~all" \n')),Object(a.b)("p",null,"This enables the ",Object(a.b)("em",{parentName:"p"},"Softfail")," mode for SPF. You could first add this SPF record with a very low TTL.",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("em",{parentName:"p"},"SoftFail")," is a good setting for getting started and testing, as it lets all email through, with spams tagged as such in the mailbox."),Object(a.b)("p",null,"After verification, you ",Object(a.b)("em",{parentName:"p"},"might")," want to change your SPF record to ",Object(a.b)("inlineCode",{parentName:"p"},"v=spf1 mx -all")," so as to enforce the ",Object(a.b)("em",{parentName:"p"},"HardFail")," policy. See ",Object(a.b)("a",{parentName:"p",href:"http://www.open-spf.org/SPF_Record_Syntax/"},"http://www.open-spf.org/SPF_Record_Syntax/")," for more details about SPF policies."),Object(a.b)("p",null,"In any case, increment the SPF record's TTL to its final value."),Object(a.b)("h2",{id:"backup-mx-secondary-mx"},"Backup MX, Secondary MX"),Object(a.b)("p",null,"For whitelisting a IP-Address from the SPF test, you can create a config file (see ",Object(a.b)("a",{parentName:"p",href:"http://www.linuxcertif.com/man/5/policyd-spf.conf/"},"policyd-spf.conf"),") and mount that file into ",Object(a.b)("inlineCode",{parentName:"p"},"/etc/postfix-policyd-spf-python/policyd-spf.conf"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example:")),Object(a.b)("p",null,"Create and edit a policyd-spf.conf file here ",Object(a.b)("inlineCode",{parentName:"p"},"/<your Docker-Mailserver dir>/config/postfix-policyd-spf.conf"),":"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"debugLevel = 1 \n#0(only errors)-4(complete data received)\n\nskip_addresses = 127.0.0.0/8,::ffff:127.0.0.0/104,::1\n\n# Preferably use IP-Addresses for whitelist lookups:\nWhitelist = 192.168.0.0/31,192.168.1.0/30\n# Domain_Whitelist = mx1.mybackupmx.com,mx2.mybackupmx.com\n\n")),Object(a.b)("p",null,"Then add this line to ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," below the ",Object(a.b)("inlineCode",{parentName:"p"},"volumes:")," section"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"- ./config/postfix-policyd-spf.conf:/etc/postfix-policyd-spf-python/policyd-spf.conf\n")))}l.isMDXComponent=!0}}]);