(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{104:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},s=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=l(r),m=n,b=s["".concat(c,".").concat(m)]||s[m]||d[m]||o;return r?a.a.createElement(b,u(u({ref:t},p),{},{components:r})):a.a.createElement(b,u({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:n,c[1]=u;for(var p=2;p<o;p++)c[p]=r[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},99:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return u})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return l}));var n=r(3),a=r(7),o=(r(0),r(104)),c={id:"update-and-cleanup",title:"Update & Cleanup"},u={unversionedId:"update-and-cleanup",id:"update-and-cleanup",isDocsHomePage:!1,title:"Update & Cleanup",description:"Automatic update",source:"@site/docs/Update-and-cleanup.md",slug:"/update-and-cleanup",permalink:"/docker-mailserver/update-and-cleanup",editUrl:"https://github.com/polarathene/docker-mailserver/tree/docs/docusaurus-demo/website/docs/Update-and-cleanup.md",version:"current",sidebar:"docs",previous:{title:"Optional Configuration",permalink:"/docker-mailserver/optional-configuration"},next:{title:"Override the default config of Dovecot",permalink:"/docker-mailserver/override-dovecot"}},i=[{value:"Automatic update",id:"automatic-update",children:[]},{value:"Automatic cleanup",id:"automatic-cleanup",children:[]}],p={toc:i};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"automatic-update"},"Automatic update"),Object(o.b)("p",null,"Docker images are handy but it can get a a hassle to keep them updated. Also when a repository is automated you want to get these images when they get out."),Object(o.b)("p",null,"One could setup a complex action/hook-based workflow using probes, but there is a nice, easy to use docker image that solves this issue and could prove useful: ",Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/containrrr/watchtower"},"watchtower"),"."),Object(o.b)("p",null,"A docker-compose example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"services:\n  watchtower:\n    restart: always\n    image: containrrr/watchtower:latest\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n")),Object(o.b)("p",null,"For more details, see the ",Object(o.b)("a",{parentName:"p",href:"https://containrrr.github.io/watchtower/"},"manual")),Object(o.b)("h2",{id:"automatic-cleanup"},"Automatic cleanup"),Object(o.b)("p",null,"When you are pulling new images in automatically, it would be nice to have them cleaned up as well. There is also a docker image for this: ",Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/spotify/docker-gc/"},"spotify/docker-gc"),"."),Object(o.b)("p",null,"A docker-compose example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"services:\n  docker-gc:\n    restart: always\n    image: spotify/docker-gc:latest\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n")),Object(o.b)("p",null,"For more details, see the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/spotify/docker-gc/blob/master/README.md"},"manual")),Object(o.b)("p",null,"Or you can just use the ",Object(o.b)("a",{parentName:"p",href:"https://containrrr.github.io/watchtower/arguments/#cleanup"},Object(o.b)("inlineCode",{parentName:"a"},"--cleanup"))," option provided by containrrr/watchtower."))}l.isMDXComponent=!0}}]);