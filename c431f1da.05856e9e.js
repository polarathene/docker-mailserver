(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{104:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),l=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,h=p["".concat(o,".").concat(m)]||p[m]||d[m]||i;return t?a.a.createElement(h,s(s({ref:n},c),{},{components:t})):a.a.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},94:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),i=(t(0),t(104)),o={id:"setupsh",title:"Your best friend setup.sh"},s={unversionedId:"setupsh",id:"setupsh",isDocsHomePage:!1,title:"Your best friend setup.sh",description:"setup.sh is an administration script that helps with the most common tasks, including initial configuration. It is intented to be used from the host machine, not from within your running container.",source:"@site/docs/setup.sh.md",slug:"/setupsh",permalink:"/docker-mailserver/setupsh",editUrl:"https://github.com/polarathene/docker-mailserver/tree/docs/docusaurus-demo/website/docs/setup.sh.md",version:"current",sidebar:"docs",previous:{title:"An Introduction to Mail Servers",permalink:"/docker-mailserver/introduction"},next:{title:"Configure Accounts",permalink:"/docker-mailserver/config-accounts"}},u=[{value:"Usage",id:"usage",children:[]}],c={toc:u};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://github.com/docker-mailserver/docker-mailserver/blob/master/setup.sh"},Object(i.b)("inlineCode",{parentName:"a"},"setup.sh"))," is an administration script that helps with the most common tasks, including initial configuration. It is intented to be used from the host machine, ",Object(i.b)("em",{parentName:"p"},"not")," from within your running container."),Object(i.b)("p",null,"The latest version of the script is included in the ",Object(i.b)("inlineCode",{parentName:"p"},"docker-mailserver")," repository. You may retrieve it at any time by running this command in your console:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-BASH"},"wget https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/master/setup.sh\nchmod a+x ./setup.sh\n")),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"Run ",Object(i.b)("inlineCode",{parentName:"p"},"./setup.sh -h")," and you'll get some usage information:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-BASH"},"setup.sh Bootstrapping Script\n\nUsage: ./setup.sh [-i IMAGE_NAME] [-c CONTAINER_NAME] <subcommand> <subcommand> [args]\n\nOPTIONS:\n\n  -i IMAGE_NAME     The name of the docker-mailserver image\n                    The default value is\n                    'docker.io/mailserver/docker-maiserver:latest'\n\n  -c CONTAINER_NAME The name of the running container.\n\n  -p PATH           Config folder path (default: /home/georg/github/docker-mailserver/config)\n\n  -h                Show this help dialogue\n\n  -z                Allow container access to the bind mount content\n                    that is shared among multiple containers\n                    on a SELinux-enabled host.\n\n  -Z                Allow container access to the bind mount content\n                    that is private and unshared with other containers\n                    on a SELinux-enabled host.\n\nSUBCOMMANDS:\n\n  email:\n\n    ./setup.sh email add <email> [<password>]\n    ./setup.sh email update <email> [<password>]\n    ./setup.sh email del <email>\n    ./setup.sh email restrict <add|del|list> <send|receive> [<email>]\n    ./setup.sh email list\n\n  alias:\n    ./setup.sh alias add <email> <recipient>\n    ./setup.sh alias del <email> <recipient>\n    ./setup.sh alias list\n\n  quota:\n    ./setup.sh quota set <email> [<quota>]\n    ./setup.sh quota del <email>\n\n  config:\n\n    ./setup.sh config dkim <keysize> (default: 4096) <domain.tld> (optional - for LDAP setups)\n    ./setup.sh config ssl <fqdn>\n\n  relay:\n\n    ./setup.sh relay add-domain <domain> <host> [<port>]\n    ./setup.sh relay add-auth <domain> <username> [<password>]\n    ./setup.sh relay exclude-domain <domain>\n\n  debug:\n\n    ./setup.sh debug fetchmail\n    ./setup.sh debug fail2ban [<unban> <ip-address>]\n    ./setup.sh debug show-mail-logs\n    ./setup.sh debug inspect\n    ./setup.sh debug login <commands>\n\n  help: Show this help dialogue\n")))}l.isMDXComponent=!0}}]);